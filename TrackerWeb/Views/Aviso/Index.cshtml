@model TrackerWeb.Models.AvisoViewModel
@{
    ViewData["Title"] = "Avisos";
}

<h1>Avisos</h1>

<div class="alert alert-success" id="success-addAviso" style="display:none">
</div>

<div class="alert alert-danger" id="danger-alert" style="display:none">
</div>

<div class="col-mb-3">
    <div class="form-check form-switch col-sm-2 float-start">
        <div>
            <input class="form-check-input" type="checkbox" id="flexSwitchSoloCerrados">
            <label class="form-check-label" for="flexSwitchSoloCerrados">Incluir avisos cerrados</label>
            <br />
            <input class="form-check-input" type="checkbox" id="flexSwitchUltimoAño" checked>
            <label class="form-check-label" for="flexSwitchUltimoAño">Ver solo ultimos meses</label>
        </div>
    </div>
    @if (Model.AsignaCasos)
    {
        <div class="col-sm-2 float-start">
            <button type="button" class="btn btn-light float-end" id="btnAsignAviso">Asignar Avisos</button>
        </div>
    }
    <div class="col-sm-2 float-end">
        <button type="button" class="btn btn-light float-end" id="btnAddNuevoAviso">Nuevo Aviso</button>
    </div>
    <div class="col-sm-2 float-end">
        <button type="button" class="btn btn-light float-end" id="btnAddAvisoProvisional">Aviso Provisional</button>
    </div>
</div>

<br />
<br />
<br />
<br />

<div id="gridAvisos" class="col-md-12"> </div>

<div class="modal fade" id="newAvisoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Aviso</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body align-items-center">
                @Html.Partial("_AddAviso",Model)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="btnSaveNewAviso" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>
@if (Model.AsignaCasos)
{
    <div class="modal fade" id="newAsignModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Asignar aviso</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body align-items-center" id="ModalAsignBody">
                    @Html.Partial("_AsingAviso",Model)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" id="btnAsignCaso" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </div>
    </div>
}


<script>

    var ultimo = "";
    var model = @Html.Raw(Json.Serialize(@Model));
    var datosGrid = model.avisos.filter(function (x) { return !x.desestado.startsWith("Cerrada"); });

    var grid = $("#gridAvisos").dxDataGrid({
        dataSource: {
            key: "idcaso",
            load: function () {
                return datosGrid;
            }
        },
        allowColumnResizing: true,
        columnAutoWidth: true,
        searchPanel: { visible: true },
        headerFilter: { visible: true },
        filterRow: { visible: true },
        filterPanel: { visible: true },
        paging: {
            pageSize: 10,
        },
        pager: {
            visible: true,
            allowedPageSizes: [5, 10, 20, 100, 500],
            showPageSizeSelector: true,
            showInfo: true,
            showNavigationButtons: true,
        },
        selection: {
            mode: 'multiple'
        },
        export: {
            enabled: true
        },
        onExporting: function (e) {
            const workbook = new ExcelJS.Workbook();
            const worksheet = workbook.addWorksheet('Main sheet');

            DevExpress.excelExporter.exportDataGrid({
                worksheet: worksheet,
                component: e.component
            }).then(function () {
                workbook.xlsx.writeBuffer().then(function (buffer) {
                    saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Avisos.xlsx');
                });
            });
            e.cancel = true;
        },
        columns: [
            { dataField: "fecha", sortOrder: "asc" },
            { dataField: "cliente", width: 200, format: "fixedPoint" },
            "desestado",
            "destipo",
            "desorigen",
            "prioridad",
            "numcaso",
            "desfuente",
            { dataField: "descripcion", width: 200 },
            "asignado",
            "empleado"
        ], onRowDblClick(e) {
            EditCaso(e.data.idcaso);
        }
    });

    $("#flexSwitchSoloCerrados").change(function () {
        datosGrid = model.avisos.filter(x => !x.desestado.startsWith("Cerrada"));
        if ($("#flexSwitchSoloCerrados").prop("checked")) {
            datosGrid = model.avisos;
        }
        grid.dxDataGrid("getDataSource").reload();
    });

    $("#flexSwitchUltimoAño").change(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAvisos","Aviso")",
            data: { _ultimos: $("#flexSwitchUltimoAño").prop("checked") },
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    model = response;
                    console.log(model.avisos.length);
                    datosGrid = model.avisos.filter(x => !x.desestado.startsWith("Cerrada"));
                    if ($("#flexSwitchSoloCerrados").prop("checked")) {
                        datosGrid = model.avisos;
                    }
                    grid.dxDataGrid("getDataSource").reload();
                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });

    $("#btnSaveNewAviso").click(function () {
        var NuevoAviso = {
            IDCLIENTE: selectCliente[0].selectize.getValue(),
            FUENTE: selectFuente[0].selectize.getValue(),
            ESTADO: selectEstado[0].selectize.getValue(),
            TIPO: selectTipo[0].selectize.getValue(),
            ORIGEN: selectOrigen[0].selectize.getValue(),
            FECHA: new Date(dateTimeBox.dxDateBox("instance").option('value')).toLocaleTimeString("es-ES"),
            PRIORIDAD: $("input[name=prioridad]:checked").val(),
            DESCRIPCION: $("#textDescripcion").val(),
            IDCASO: ""
        }

        SaveAviso(NuevoAviso);

        $('#newAvisoModal').modal('toggle');
        $('#success-addAviso').text("Nuevo aviso creado!");
        $('#success-addAviso').show();
        $("#success-addAviso").fadeTo(5000, 500).slideUp(500, function () {
            $("#success-addAviso").slideUp(500);
        });
    });

    $('#btnAddNuevoAviso').click(function () {
        //Vaciar todo
        $("#IdNumCaso").val("");
        selectCliente[0].selectize.clear();
        selectFuente[0].selectize.clear();
        selectEstado[0].selectize.clear();
        selectTipo[0].selectize.clear();
        selectOrigen[0].selectize.clear();
        model.HistorialAviso = [];
        gridHistorial.dxDataGrid("getDataSource").reload();
        $("#textDescripcion").val("");
        $("#prioridadRadio2").prop("checked", true);
        $('#success-addAviso').text("!Aviso creado correctamente!");

        $('#newAvisoModal').modal('show');
    });

    $("#btnAsignAviso").click(function () {

        $('#success-addAviso').text("!Aviso asignado correctamente!");

        model.seleccionados = grid.dxDataGrid("instance").getSelectedRowsData();
        gridAvisosSeleccionados.dxDataGrid("getDataSource").reload()
        //$("#ModalAsignBody").text(AvisosSeleccionados);
        if (model.seleccionados.length > 0) {

            $("#newAsignModal").modal("show");

            grafico.dxChart("getDataSource").reload();

            setTimeout(function () {
                grafico.dxChart("instance").render();
            }, 500);
        } else {
            $('#danger-alert').text("Error no se han seleccionado avisos");
            $('#danger-alert').show();
            $("#danger-alert").fadeTo(3000, 500).slideUp(500, function () {
                $("#danger-alert").slideUp(500);
            });
        }

    });

    $("#btnAsignCaso").click(function () {
        var empleado = selectEmpleado[0].selectize.getValue();

        var a = {
            employeeID: selectEmpleado[0].selectize.getValue(),
            avisos: model.seleccionados
        };

        var url = "@Url.Action("Asignar","Aviso")";

        $.ajax({
            type: "POST",
            url: url,
            data: a,
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    //alert("Name : " + response.Name + ", Designation : " + response.Designation + ", Location :" + response.Location);
                    model = response;
                    //Recargar grid
                    datosGrid = model.avisos.filter(x => !x.desestado.startsWith("Cerrada"))
                    grid.dxDataGrid("getDataSource").reload();
                    grid.dxDataGrid("deselectRows", a.avisos.map(x => x.idcaso));

                    $('#newAsignModal').modal('toggle');
                    $('#success-addAviso').show();
                    $("#success-addAviso").fadeTo(2000, 500).slideUp(500, function () {
                        $("#success-addAviso").slideUp(500);
                    });
                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });



    });

    $("#btnAddAvisoProvisional").click(function () {
        $("#IdNumCaso").val("");
        var NuevoAviso = {
            IDCLIENTE: '0',
            FUENTE: '5',
            ESTADO: '1',
            TIPO: '8',
            ORIGEN: '3',
            FECHA: new Date(Date.now()).toLocaleTimeString("es-ES"),
            PRIORIDAD: 'M',
            DESCRIPCION: 'Provisional!!!!!!!!!!!!!',
            IDCASO: ""
        }

        SaveAviso(NuevoAviso);

        $('#success-addAviso').text("Nuevo aviso provisional creado!");
        $('#success-addAviso').show();
        $("#success-addAviso").fadeTo(5000, 500).slideUp(500, function () {
            $("#success-addAviso").slideUp(500);
        });

    });

    function SaveAviso(NuevoAviso) {
        var url = "@Url.Action("Create","Aviso")";
        if ($("#IdNumCaso").val() != "") {
            url = "@Url.Action("Edit","Aviso")";
            NuevoAviso.IDCASO = $("#IdNumCaso").val();
        }

        //Hacer insert en BBDD y modelo

        $.ajax({
            type: "POST",
            url: url,
            data: NuevoAviso,
            dataType: "json",
            success: function (response) {
                if (response != null) {
                    //alert("Name : " + response.Name + ", Designation : " + response.Designation + ", Location :" + response.Location);
                    model = response;
                    //Recargar grid
                    datosGrid = model.avisos.filter(x => !x.desestado.startsWith("Cerrada"))
                    grid.dxDataGrid("getDataSource").reload();
                } else {
                    alert("Something went wrong");
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

</script>
