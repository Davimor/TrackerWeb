@model TrackerWeb.Models.AvisoViewModel
@{
    ViewData["Title"] = "Avisos";
}

<h1>Avisos</h1>

<div class="col-mb-3">
    <div class="form-check form-switch col-sm-4 float-start">
        <input class="form-check-input" type="checkbox" id="flexSwitchSoloAsignados">
        <label class="form-check-label" for="flexSwitchCheckDefault">Ver solo avisos sin asignar</label>
    </div>
    <div class="col-sm-4 float-end">
        <button type="button" class="btn btn-light float-end" data-bs-toggle="modal" data-bs-target="#newAvisoModal">Nuevo Aviso</button>
    </div>
</div>

<br />
<br />
<br />
<br />

<div id="gridTest" class="col-md-12"> </div>

<div class="modal fade" id="newAvisoModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Aviso</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3 row">
                    <label class="col-sm-2">Cliente:</label>
                    <select id="selectCliente" class="selectized col-sm-10"></select>
                </div>
                <div class="mb-1 row">
                    <label class="col-sm-2">Fuente:</label>
                    <select id="selectFuente" class="selectized col-sm-4"></select>
                    <label class="col-sm-2">Estado:</label>
                    <select id="selectEstado" class="selectized col-sm-4"></select>
                </div>
                <div class="mb-1 row">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>


<script>
    var model = JSON.parse('@Html.Raw(Json.Serialize(@Model))');
    var datosGrid = model.avisos;

    //var model = JSON.parse(myJSONString.escapeSpecialChars());

    $("#selectCliente").selectize({
        sortField: "text",
        options: model.clientes,
        labelField: 'nombre',
        valueField: 'idcliente',
        searchField: 'nombre',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.nombre) + '</span>' +
                    '</div>';
            }
        }
    });

    $("#selectFuente").selectize({
        sortField: "text",
        options: model.clientes,
        labelField: 'nombre',
        valueField: 'idcliente',
        searchField: 'nombre',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.nombre) + '</span>' +
                    '</div>';
            }
        }
    });

    $("#selectEstado").selectize({
        sortField: "text",
        options: model.clientes,
        labelField: 'nombre',
        valueField: 'idcliente',
        searchField: 'nombre',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.nombre) + '</span>' +
                    '</div>';
            }
        }
    });

    var grid = $("#gridTest").dxDataGrid({
        dataSource: {
            key: "idcaso",
            load: function () {
                return datosGrid;
            }
        },
        searchPanel: { visible: true },
        headerFilter: { visible: true },
        filterRow: { visible: true },
        filterPanel: { visible: true },
        paging: {
            pageSize: 10,
        },
        pager: {
            visible: true,
            allowedPageSizes: [5, 10, 20, 'all'],
            showPageSizeSelector: true,
            showInfo: true,
            showNavigationButtons: true,
        }, 
        selection: {
            mode: 'multiple'
        },
        export: {
            enabled: true
        }, 
        onExporting: function (e) {
            const workbook = new ExcelJS.Workbook();
            const worksheet = workbook.addWorksheet('Main sheet');

            DevExpress.excelExporter.exportDataGrid({
                worksheet: worksheet,
                component: e.component
            }).then(function () {
                workbook.xlsx.writeBuffer().then(function (buffer) {
                    saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Avisos.xlsx');
                });
            });
            e.cancel = true;
        },
        columns: [
            "fecha",
            { dataField: "cliente", width: 200, format: "fixedPoint" },
            "estado",
            "tipo",
            "origen",
            "prioridad",
            "numcaso",
            "fuente",
            { dataField: "descripcion", width: 200 },
            "asignado"
        ]
    });

    $("#flexSwitchSoloAsignados").change(() => {
        datosGrid = model.avisos;
        if ($("#flexSwitchSoloAsignados").prop("checked")) {
            datosGrid = model.avisos.filter((x) => x.asignado === true);
        }
        grid.dxDataGrid("getDataSource").reload();
    });

</script>
