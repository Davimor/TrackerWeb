@model TrackerWeb.Models.AvisoViewModel
<div class="mb-3 row">
    <label class="col-sm-1">Cliente:</label>
    <select id="selectCliente" class="selectized col-sm-11"></select>
</div>
<div class="mb-3 row">
    <label class="col-sm-1">Fuente:</label>
    <select id="selectFuente" class="selectized col-sm-3"></select>
    <label class="col-sm-1">Estado:</label>
    <select id="selectEstado" class="selectized col-sm-3"></select>
    <label class="col-sm-1">Tipo:</label>
    <select id="selectTipo" class="selectized col-sm-3"></select>
</div>
<div class="mb-3 row">
    <label class="col-sm-1">Origen:</label>
    <select id="selectOrigen" class="selectized col-sm-3"></select>
    <label class="col-sm-1">Fecha</label>
    <div class="col-sm-4">
        <div id="fechaAviso"></div>
    </div>
</div>
<div class="mb-3">
    <label class="col-sm-2">Prioridad:</label>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="prioridad" id="prioridadRadio1" value="B">
        <label class="form-check-label" for="inlineRadio1">Baja</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="prioridad" id="prioridadRadio2" value="M" checked="checked">
        <label class="form-check-label" for="inlineRadio2">Media</label>
    </div>
    <div class="form-check form-check-inline">
        <input class="form-check-input" type="radio" name="prioridad" id="prioridadRadio3" value="A">
        <label class="form-check-label" for="inlineRadio3">Alta</label>
    </div>
</div>
<div class="mb-3">
    <label for="textDescripcion" class="form-label">Descripción:</label>
    <textarea class="form-control" id="textDescripcion" rows="3"></textarea>
</div>

<label for="gridHistorial" class="form-label">Historial:</label>
<div id="gridHistorialAvisos" class="col-md-12"> </div>

<script>

    var model = @Html.Raw(Json.Serialize(@Model));

    var selectCliente = $("#selectCliente").selectize({
        sortField: "text",
        options: model.clientes,
        labelField: 'nombre',
        valueField: 'idcliente',
        searchField: 'nombre',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.nombre) + '</span>' +
                    '</div>';
            }
        }
    });

    var selectFuente = $("#selectFuente").selectize({
        sortField: "text",
        options: model.fuentes,
        labelField: 'valor',
        valueField: 'clave',
        searchField: 'valor',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.valor) + '</span>' +
                    '</div>';
            }
        }
    });

    var selectEstado = $("#selectEstado").selectize({
        sortField: "text",
        options: model.estados,
        labelField: 'valor',
        valueField: 'clave',
        searchField: 'valor',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.valor) + '</span>' +
                    '</div>';
            }
        }
    });

    var selectTipo = $("#selectTipo").selectize({
        sortField: "text",
        options: model.tipos,
        labelField: 'valor',
        valueField: 'clave',
        searchField: 'valor',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.valor) + '</span>' +
                    '</div>';
            }
        }
    });

    var selectOrigen = $("#selectOrigen").selectize({
        sortField: "text",
        options: model.origenes,
        labelField: 'valor',
        valueField: 'clave',
        searchField: 'valor',
        render: {
            option: function (data, escape) {
                return '<div class="option">' +
                    '<span class="title">' + escape(data.valor) + '</span>' +
                    '</div>';
            }
        }
    });

    var dateTimeBox = $("#fechaAviso").dxDateBox({
        "opened": false,
        type: 'datetime',
        value: new Date(),
        displayFormat: 'dd/MM/yyyy HH:mm:ss',
    });

 

    var grid = $("#gridHistorialAvisos").dxDataGrid({
        dataSource: {
            key: "idcaso",
            load: function () {
                return model.HistorialAviso;
            }
        },
        allowColumnResizing: true,
        columnAutoWidth: true,
        searchPanel: { visible: false },
        headerFilter: { visible: false },
        filterRow: { visible: false },
        filterPanel: { visible: false },
        paging: {
            pageSize: 5,
        },
        pager: {
            visible: true,
            allowedPageSizes: [5, 10,'all'],
            showPageSizeSelector: true,
            showInfo: true,
            showNavigationButtons: false,
        },
        export: {
            enabled: true
        },
        onExporting: function (e) {
            const workbook = new ExcelJS.Workbook();
            const worksheet = workbook.addWorksheet('Historial');

            DevExpress.excelExporter.exportDataGrid({
                worksheet: worksheet,
                component: e.component
            }).then(function () {
                workbook.xlsx.writeBuffer().then(function (buffer) {
                    saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Historial Aviso.xlsx');
                });
            });
            e.cancel = true;
        },
        columns: [
            { dataField: "fecha", sortOrder: 'desc', },
            { dataField: "descripcion", width: 200 },
            "empleado"
        ]
    });

    

</script>